{"name":"Test for wozlla","tagline":"test_for_wozlla ","body":"# Javascript技术题：\r\n### 1. 请列举一些数组元素去重方法\r\n\r\n###### 定义新数组，正向遍历旧数组，保存旧数组中目前还未重复过的值。复杂度O(N方)\r\n\r\n    Array.prototype.unique1 = function()\r\n    {\r\n\t    var n = []; //一个新的临时数组\r\n\t    for(var i = 0; i < this.length; i++) //遍历当前数组\r\n\t    {\r\n\t\t//如果当前数组的第i已经保存进了临时数组，那么跳过，\r\n\t\t//否则把当前项push到临时数组里面\r\n\t\tif (n.indexOf(this[i]) == -1) n.push(this[i]);\r\n\t    }\r\n\t    return n;\r\n    }\r\n\r\n  \r\n\r\n###### 定义新数组和哈希，正向遍历旧数组，未重复，存入哈希和新数组，重复则continue 。复杂度0（N）\r\n\r\n\r\n\r\n     Array.prototype.unique2 = function()\r\n    {\r\n\t    var n = {},r=[]; //n为hash表，r为临时数组\r\n\t    for(var i = 0; i < this.length; i++) //遍历当前数组\r\n\t    {\r\n\t\tif (!n[this[i]]) //如果hash表中没有当前项\r\n\t\t{\r\n\t\t\tn[this[i]] = true; //存入hash表\r\n\t\t\tr.push(this[i]); //把当前数组的当前项push到临时数组里面\r\n\t\t}\r\n\t    }\r\n\t    return r;\r\n    }\r\n\r\n\r\n###### 定义新数组，旧数组先排序，遍历旧数组，不重复，push到新数组。复杂度0（N方）\r\n\r\n\r\n    Array.prototype.unique3 = function()\r\n    {\r\n\tthis.sort();\r\n\tvar re=[this[0]];\r\n\tfor(var i = 1; i < this.length; i++)\r\n\t{\r\n\t\tif( this[i] !== re[re.length-1])\r\n\t\t{\r\n\t\t\tre.push(this[i]);\r\n\t\t}\r\n\t}\r\n\treturn re;\r\n    }\r\n\r\n### 2. javascript的作用域和作用域链是什么？\r\n###### 作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。在JavaScript中，有全局作用域和局部作用域。\r\n###### 对象的属性里，函数被创建的作用域中对象的集合。比如add函数被创建时，add函数的作用域链会填入所有add函数可以访问的数据对象。这个集合就是作用域链。因为全局变量总是在作用域链尾部，如果某函数被调用的特别深，此函数调用局部变量会特别慢。避免：减少全局变量数，局部再定义全局变量。\r\n### 3. javascript变量声名提升是什么意思？\r\n###### c，c++，java是块级作用域。javascript是函数式作用域。函数运行时，把变量的声明全都提升到函数top位置。会出BUG！避免：局部变量的赋值放在函数top位置。\r\n### 4. 如何解决回调层次过深的问题？\r\n###### 给匿名函数命名，代码抛异常的时候准确定位\r\n###### 模块化\r\n### 5. Ajax是指什么？jsonP是指什么？两者的原理分别是？\r\n###### AJAX 网页异步更新，不需要刷新。\r\n###### \r\n# Canvas技术题目： \r\n### 1. 请列举十个以上常用的canvas2d的接口\r\n###### canvas.getContext('2d');获取canvas上下文\r\n###### ctx.moveTo(x,y) 起始点(x,y)\r\n###### ctx.lineTo(x,y);如果没有起始点，就是起始点；有，就是终止点\r\n###### ctx.rect(x,y,w,h)画矩形\r\n###### ctx.arc(x,y,radius,startAngle,endAngle,anticClock);圆弧\r\n###### ctx.arcTo(x1,y1,x2,y2,radius);俩点之间最短弧线\r\n###### ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);三次贝塞尔\r\n###### ctx.bezierCurveTo(cp1x,cp1y,x,y);两次贝塞尔\r\n###### ctx.full();闭合路径\r\n###### ctx.clip();剪切\r\n###### ctx.stroke();描边\r\n### 2. 在canvas下如何优化文字的渲染速度？\r\n### 3. 写下几种composite operation\r\n### 4. transform和setTransform接口的区别\r\n### 5. 请列举几个比较出名的js游戏框架\r\n###### cocos2d-js 白鹭 phaser pixi  Construct2 easeljs three.js lufylegend \r\n \r\n# WebGL技术题: ##\r\n### 1. 如何兼容性地获取WebGL context？\r\n### 2. 列出10个常用的WebGL接口\r\n### 3. WebGL如何绘制图片？\r\n### 4. WebGL如何绘制文本？\r\n### 5. WebGL的pipeline是怎么样的？\r\n### 6. 着色器是什么？\r\n### 7. 绘制图片时Shader里必然会用到什么内置变量？\r\n### 8. drawArray和drawElements的区别？\r\n### 9. 有哪些优化WebGL性能的手段？\r\n\r\n### Support or Contact  \r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}